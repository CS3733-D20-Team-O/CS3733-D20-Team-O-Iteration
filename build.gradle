plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id "io.freefair.lombok" version "5.0.0-rc6"
}

mainClassName = 'edu.wpi.cs3733.d20.teamO.Main'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://apisite.crmyers.dev/maven'
    }
}

dependencies {
    implementation(
            'org.greenrobot:eventbus:3.2.0',
            'com.google.inject:guice:4.2.3',
            'com.jfoenix:jfoenix:9.0.9',
            'org.apache.derby:derby:10.14.2.0',
            'org.slf4j:slf4j-api:1.7.30',
            'org.slf4j:slf4j-simple:1.7.30',
    )

    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.6.0',
            'org.testfx:testfx-junit5:4.0.16-alpha',
            'org.mockito:mockito-core:3.+',
            'org.mockito:mockito-junit-jupiter:3.+',
    )
    testRuntimeOnly(
            'org.testfx:openjfx-monocle:jdk-11+26',
    )
}

javafx {
    version = "11"
    modules = ['javafx.controls', 'javafx.fxml']
}

run {
    jvmArgs = ['--add-opens=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED',
               '--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
               '--add-opens=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
               '--add-opens=javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
               '--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
               '--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
               '--add-opens=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED'
    ]
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// code coverage excludes for jacoco
def codeCoverageExcludes = [
        // The following are excluded because they have no callable methods
        'edu.wpi.cs3733.d20.teamO.model.database.db_model.*',
        // The following are just Guice modules
        'edu.wpi.cs3733.d20.teamO.injection_modules.*',
        // todo test these later
        'edu.wpi.cs3733.d20.teamO.Main',
        'edu.wpi.cs3733.d20.teamO.model.datatypes.LoginDetails',
        'edu.wpi.cs3733.d20.teamO.view_model.NodeMapView',
        'edu.wpi.cs3733.d20.teamO.view_model.NavigationBar',
        'edu.wpi.cs3733.d20.teamO.view_model.admin.MainAdminViewModel',
        'edu.wpi.cs3733.d20.teamO.view_model.kiosk.MainKioskViewModel',
        'edu.wpi.cs3733.d20.teamO.view_model.admin.RequestHandlerViewModel',
        'edu.wpi.cs3733.d20.teamO.view_model.admin.FloorMapEditorViewModel',
        'edu.wpi.cs3733.d20.teamO.view_model.kiosk.FindPathViewModel',
]

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = codeCoverageExcludes
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport